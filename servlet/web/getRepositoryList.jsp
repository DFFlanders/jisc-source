<%	boolean isAuthenticated = false;	String token = request.getParameter("token");		// TODO: really needs to be some form of decrypt or unpack	// for now make a trivial test	String userId = token; 				isAuthenticated = ((token != null) && (token.length() > 0));		StringBuffer xml = new StringBuffer("\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>");	if (isAuthenticated) {			xml.append("\n<repositories>");		 		try {			edu.calstate.osidutil.ProviderUtilities providerUtilities = new edu.calstate.osidutil.ProviderUtilities("../conf/providerConfig.xml",true);			java.util.Vector repositoryVector = providerUtilities.getRepositories();			for (int i=0, size = repositoryVector.size(); i < size; i++) {				xml.append("\n\t<repository>");				org.osid.repository.Repository nextRepository = (org.osid.repository.Repository)repositoryVector.elementAt(i);							xml.append("\n\t\t<displayName>");				try {					xml.append(nextRepository.getDisplayName());				} catch (Throwable t) {}				xml.append("</displayName>");							xml.append("\n\t\t<description>");				try {					xml.append(nextRepository.getDescription());				} catch (Throwable t) {}				xml.append("</description>");							xml.append("\n\t\t<id>");				try {					xml.append(nextRepository.getId().getIdString());				} catch (Throwable t) {}				xml.append("</id>");							xml.append("\n\t\t<type>");				try {					org.osid.shared.Type repositoryType = nextRepository.getType();					String typeString = repositoryType.getDomain() + "/" + repositoryType.getKeyword() + "@" + repositoryType.getAuthority();					xml.append(typeString);				} catch (Throwable t) {}				xml.append("</type>");				xml.append("\n\t</repository>");			}			xml.append("\n</repositories>");		} catch (Throwable t) {		}		%>			<%=xml%>		<%	} else {%>Authentication Error<%	}%>