<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html><head><title>Federated Search</title><meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/></head><style type="text/css"><!--	body { 	background-color:#E8E8E8; 	background-image: url(../../digitalstate-web/web/col_im/bg.gif);	}		 .box1 {        position:absolute;        left:0px;        top:0px;        height:34px;		z-index:1;    }	 .box2 {        position:absolute;        left:0px;        top:41px;        width:154px;		height:800px;		}			 .box3 {        position:absolute;        left:64px;        top:43px;    }			 .box4 {        position:absolute;        left:204px;    }	  	a:link {        color:#333333;        text-decoration:none;    }    a:active { color:#333333;        text-decoration:none;	}    a:visited { color:#3D467F;        text-decoration:none;	}	a:hover { color:#333333;        text-decoration:underline;	}.bottibody {color: #333333; font-size: 11px; line-height: 16px; font-family: Verdana, Arial, Helvetica, sans-serif} .box6 {	position:absolute;	top:6px;	width:99%;	z-index: 0;		}			--></style><script language="JavaScript" type="text/JavaScript"><!--function VC_openWindow(theURL,winName,features) { //v2.0  window.open(theURL,winName,features);}//--></script><body><%		boolean noAssets = false;		org.okiproject.Managers managers = org.okiproject.Managers.getInstance(session.getServletContext());				org.osid.repository.AssetIterator assetIterator = null;    	org.osid.shared.Type searchType = null;    	org.osid.shared.Properties searchProperties = null;		String searchCriteria = request.getParameter("criteria");					String viewAllId = request.getParameter("viewAllId");					String idList = request.getParameter("idList");		String sType = request.getParameter("searchType");		String searchRepositories = request.getParameter("searchRepositories");		java.util.Vector assetDisplayNameVector = new java.util.Vector();		java.util.Vector assetThumbnailVector = new java.util.Vector();		java.util.Vector assetMediumImageVector = new java.util.Vector();		java.util.Vector assetLargeImageVector = new java.util.Vector();		java.util.Vector assetIdVector = new java.util.Vector();		java.util.Vector assetRepositoryIdVector = new java.util.Vector();		String thumbnails = "";		String pageNumber = request.getParameter("pageNumber");		java.util.Map logoMap = new java.util.HashMap();		edu.calstate.osidutil.RepositoryInstallUtilities repositoryInstallUtilities =			edu.calstate.osidutil.RepositoryInstallUtilities.getInstance();		try        {			searchType = new org.okiproject.Type("mit.edu","search","keyword");            searchProperties = new org.okiproject.SharedProperties();			org.osid.shared.Type thumbnailType = new org.okiproject.Type("mit.edu","partStructure","thumbnail");			org.osid.shared.Type thumbnailURLType = new org.okiproject.Type("mit.edu","partStructure","thumbnailURL");			org.osid.shared.Type mediumImageType = new org.okiproject.Type("mit.edu","partStructure","mediumImage");			org.osid.shared.Type mediumImageURLType = new org.okiproject.Type("mit.edu","partStructure","mediumImageURL");			org.osid.shared.Type largeImageType = new org.okiproject.Type("mit.edu","partStructure","largeImage");			org.osid.shared.Type largeImageURLType = new org.okiproject.Type("mit.edu","partStructure","largeImageURL");    						if (searchCriteria != null)			{				assetIterator = repositoryInstallUtilities.keywordSearch(searchCriteria);			}			else if (idList != null)			{				java.util.StringTokenizer st = null;				Object o = session.getAttribute("thumbnails");				if (o != null)				{					st = new java.util.StringTokenizer((String)o,"-");				}												if (st != null)				{					java.util.Vector v = new java.util.Vector();					while (st.hasMoreTokens())					{						String nextIdString = st.nextToken();						try						{							v.addElement(managers.getFederatingRepositoryManager().getAsset(managers.getIdManager().getId(nextIdString)));						}						catch (Throwable t) {}					}					assetIterator = new edu.calstate.osidimpl.repository.federate.AssetIterator(v);				}								}						// assume iterator is properly filled			if (!assetIterator.hasNextAsset())			{				noAssets = true;			}						while (assetIterator.hasNextAsset())			{				/* 					Not certain what the policy should be on the severity of missing data or an exception				*/							String displayName = "";				String id = null;				String thumbnail = null;				String medium = null;				String large = null;				String vcIdNumber = "";  //not required, default is blank				String repositoryId = null;								org.osid.repository.Asset nextAsset = assetIterator.nextAsset();				id = nextAsset.getId().getIdString();				displayName = nextAsset.getDisplayName();				repositoryId = nextAsset.getRepository().getIdString();									org.osid.repository.RecordIterator recordIterator = nextAsset.getRecords();				while (recordIterator.hasNextRecord())				{					org.osid.repository.PartIterator partIterator = recordIterator.nextRecord().getParts();					while (partIterator.hasNextPart())					{						org.osid.repository.Part part = partIterator.nextPart();						org.osid.shared.Type partStructureType = part.getPartStructure().getType();						if (partStructureType.isEqual(thumbnailType) || partStructureType.isEqual(thumbnailURLType))						{							thumbnail = (String)part.getValue();						}						else if (partStructureType.isEqual(mediumImageType) || partStructureType.isEqual(mediumImageURLType))						{							medium = (String)part.getValue();						}						else if (partStructureType.isEqual(largeImageType) || partStructureType.isEqual(largeImageURLType))						{							large = (String)part.getValue();						}	                }				}								if ( (thumbnail != null) && (medium != null) && (large != null) )					{					assetThumbnailVector.addElement(thumbnail);					assetMediumImageVector.addElement(medium);					assetLargeImageVector.addElement(large);				}				else				{					assetThumbnailVector.addElement("images/NoImage.gif");					assetMediumImageVector.addElement("images/NoImage.gif");					assetLargeImageVector.addElement("images/NoImage.gif");				}				assetDisplayNameVector.addElement(displayName);				assetIdVector.addElement(id);				assetRepositoryIdVector.addElement(repositoryId);								thumbnails += id + "-";            }        }        catch (Throwable t)        {            t.printStackTrace();        }				session.setAttribute("thumbnails",thumbnails);%></head><body bgcolor="#E8E8E8" background="col_im/bg.gif"><div align="left" class="box2"><table width="500" border="0" cellspacing="10" cellpadding="0" align="left" class="box3">  <tr>    <td height="18" colspan="3" align="top" class="bottibody">&nbsp;</td>  </tr><%if (noAssets){	%> No Assets Found <%}	int numResults = assetDisplayNameVector.size();		// find out which page we are going to show	int start = 0;	int end = numResults;	if (pageNumber == null)	{		pageNumber = "1";	}		int pageInt = (new Integer(pageNumber)).intValue();	start = 24 * (pageInt -1);	end = ((start + 24) > numResults) ? numResults : (start + 24);		for (int i=start; i < end; i++)	{		String nextDisplayName1 = (String)assetDisplayNameVector.elementAt(i);		String nextDisplayName2 = null;				String repositoryId1 = (String)assetRepositoryIdVector.elementAt(i);		String repositoryURL1 = (String)logoMap.get(repositoryId1);				String repositoryId2 = null;		String repositoryURL2 = null;		String nextAssetId1 = (String)assetIdVector.elementAt(i);		String nextAssetId2 = "";				String thumbnailURL = (String)assetThumbnailVector.elementAt(i);		String mediumURL = (String)assetMediumImageVector.elementAt(i);		String nextURL = "medium_view.jsp?assetId=" + nextAssetId1 + "&repositoryId=" + repositoryId1;				String largeURL = (String)assetLargeImageVector.elementAt(i);		String passThruURL = "&largeImage=" + largeURL;		//nextURL += passThruURL;		i++;		%>    <tr>      <td align="left" valign="top" width="221"><a href=<%=nextURL%>><img src=<%=thumbnailURL%> alt="images/NoImage.gif" /></a></td><%	  	if (i < end)	  	{			nextDisplayName2 = (String)assetDisplayNameVector.elementAt(i);			repositoryId2 = (String)assetRepositoryIdVector.elementAt(i);			repositoryURL2 = (String)logoMap.get(repositoryId2);			nextAssetId2 = (String)assetIdVector.elementAt(i);			thumbnailURL = (String)assetThumbnailVector.elementAt(i);			mediumURL = (String)assetMediumImageVector.elementAt(i);			nextURL = "medium_view.jsp?assetId=" + nextAssetId2 + "&repositoryId=" + repositoryId2;					largeURL = (String)assetLargeImageVector.elementAt(i);			passThruURL = "&largeImage=" + largeURL;			//nextURL += passThruURL;		%>		<td width="20"><img src="images/spacer.gif" width="20"/></td>        <td align="left" valign "top" width="221"><a href=<%=nextURL%>><img src=<%=thumbnailURL%> alt="images/NoImage.gif" /></a></td><% 	  	}%>    </tr> 	<tr><td height="18" width="221" align="left" valign="top" class="bottibody"><table width="175" border="0" cellspacing="0" cellpadding="0" align="left">	  <tr>		<td><%=nextDisplayName1%>, <%=nextAssetId1%><br/>			<a <%=repositoryURL1%></a></td>		</tr>		</table></td><%	  	if (nextDisplayName2 != null)	  	{%>		<td width="20"><img src="images/spacer.gif" width="20"/></td>	  	<td height="18" width="221" align="left" valign="top" class="bottibody"><table width="175" border="0" cellspacing="0" cellpadding="0" align="left">	  <tr>		<td><%=nextDisplayName2%>, <%=nextAssetId2%><br/>			<a <%=repositoryURL2%></a></td>		  </tr>		</table></td><%	  	}%>	</tr>  <tr>    <td height="18" colspan="3" align="top" class="bottibody">&nbsp;</td>  </tr><%	}	%>  <tr>    <td height="18" colspan="3" align="top" class="bottibody"><br /><%	// calculate number of result pages and corresponding navigator	int numResultPages = numResults / 24 + 1;	String results = null;	if (numResultPages > 1)	{		// compose the URL for this page, without the page parameter		String url = "thumbnail.jsp";		String connector = "?";//System.out.println("searchCriteria " + searchCriteria);//System.out.println("searchRepositories " + searchRepositories);//System.out.println("idList " + idList);//System.out.println("viewAllId " + viewAllId);//System.out.println("sType " + sType);		if (searchCriteria != null)		{			url += connector + "criteria=" + searchCriteria;			connector = "&";		}		if (searchRepositories != null)		{			url += connector + "searchRepositories=" + searchRepositories;			connector = "&";		}		if (idList != null)		{			url += connector + "idList=" + idList;			connector = "&";		}		if (viewAllId != null)		{			url += connector + "viewAllId=" + viewAllId;			connector = "&";		}		if (sType != null)		{			url += connector + "searchType=" + sType;			connector = "&";		}				// replace spaces with %20		int spaceIndex = -1;		while ( (spaceIndex = url.indexOf(" ")) != -1)		{			url = url.substring(0,spaceIndex) + "%20" + url.substring(spaceIndex + 1);					}				String numberLink = "";		for (int i=1; i <= numResultPages; i++)		{			numberLink += "<a href=" + url + "&pageNumber=" + i + ">" + i + "</a> ";		}				String go = "";		if (pageInt < numResultPages)		{			go = "<a href=" + url + "&pageNumber=" + (pageInt + 1) + ">Go to next results page</a>";		}		else		{			go = "<a href=" + url + "&pageNumber=" + (pageInt - 1) + ">Go to previous results page</a>";		}		results = "<strong>Results:</strong> page " + numberLink + "&nbsp;&nbsp;" + go + "<br />"; %>		<%=results%><%	}%>	    <br /></td>  </tr>  </table></body></html>